{
        "calva.customREPLCommandSnippets": [
        {
            "name": "Start verse Server",
            "ns": "user",
            "repl": "clj",
            "snippet": "(start)"
        },
        {
            "name": "Stop verse Server",
            "ns": "user",
            "repl": "clj",
            "snippet": "(stop)"
        },
        {
            "name": "Restart verse Server",
            "ns": "user",
            "repl": "clj",
            "snippet": "(restart)"
        }
    ],
    "calva.replConnectSequences": [
                {
            "name": "verse Server",
            "projectType": "Leiningen",
            "afterCLJReplJackInCode": "(in-ns 'user) (start) (println \"Access the server at http://localhost:3000\")",
            "cljsType": "none",
            "menuSelections": {
                "leinProfiles": [
                    "dev"
                ]
            }
        },
        {
            "name": "Server + Client â€“ verse",
            "projectType": "Leiningen",
            "afterCLJReplJackInCode": "(start)",
            "cljsType": {
                "dependsOn": "lein-figwheel",
                "connectCode": "(do (println (str \"Starting Fighweel. Client URL is http://127.0.0.1:\" (:port (clojure.edn/read-string (slurp \"dev-config.edn\"))))) (use 'figwheel-sidecar.repl-api) (when-not (figwheel-sidecar.repl-api/figwheel-running?) (figwheel-sidecar.repl-api/start-figwheel!)) (figwheel-sidecar.repl-api/cljs-repl))",
                "isConnectedRegExp": "To quit, type: :cljs/quit",
                "openUrlRegExp": "Client URL is (?<url>\\S+)",
                "shouldOpenUrl": true,
                "isReadyToStartRegExp": "Prompt will show"
            },
            "menuSelections": {
                "leinProfiles": [
                    "dev"
                ]
            }
        }
    ]
}
